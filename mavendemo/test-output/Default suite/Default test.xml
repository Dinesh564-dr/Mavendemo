<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="dinesh" ignored="1" name="Default test" tests="8" failures="0" timestamp="29 Apr 2020 05:53:46 GMT" time="0.778" errors="0">
  <testcase name="@BeforeTest start" time="0.497" classname="Day10.Spicejet">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: D:\geckodriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\geckodriver.exe
at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:44)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:167)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:190)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:147)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:125)
at Day10.Spicejet.start(Spicejet.java:19)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest start -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="day13.Ddtlogin">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="day13.Ddtlogin">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="day13.Ddtlogin">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="day13.Ddtlogin">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="day13.Loginscenario">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="readproperties" time="0.0" classname="Day12.Readconfigfile">
    <skipped/>
  </testcase> <!-- readproperties -->
  <testcase name="excelread" time="0.0" classname="Day12.Readconfigfile2">
    <skipped/>
  </testcase> <!-- excelread -->
  <testcase name="readdata" time="0.0" classname="day13.Ddtlogin">
    <skipped/>
  </testcase> <!-- readdata -->
  <testcase name="readdata" time="0.0" classname="day13.Ddtlogin">
    <skipped/>
  </testcase> <!-- readdata -->
  <testcase name="verifypage" time="0.0" classname="day13.Loginscenario">
    <skipped/>
  </testcase> <!-- verifypage -->
  <testcase name="setup" time="0.0" classname="Day10.Assignment3">
    <skipped/>
  </testcase> <!-- setup -->
  <testcase name="generatereport" time="0.0" classname="day14.Extentreportclass">
    <skipped/>
  </testcase> <!-- generatereport -->
  <testcase name="excelread" time="0.0" classname="Day12.Readexcelusingmethod">
    <skipped/>
  </testcase> <!-- excelread -->
  <testcase name="verifylogout" time="0.0" classname="day13.Loginscenario">
    <ignored/>
  </testcase> <!-- verifylogout -->
</testsuite> <!-- Default test -->
